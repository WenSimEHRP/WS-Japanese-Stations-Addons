railtypetable {
    ELECTRIFIED_RAIL:[
        ELRL
    ]
}

#define SIZE_X 64
#define SIZE_Y 64
#define SIZE_X_EXTENDED 64*3
#define SIZE_Y_EXTENDED 64*3

#define PATH "src/stations/generated_stations/gfx/" + name + ".png"
// offset part

template t_barrier_0(name) {[(SIZE_X + 1)*0, 0, SIZE_X, SIZE_Y, -31, -33, PATH]}
template t_barrier_1(name) {[(SIZE_X + 1)*1, 0, SIZE_X, SIZE_Y,  -7, -45, PATH]}
template t_barrier_2(name) {[(SIZE_X + 1)*2, 0, SIZE_X, SIZE_Y, -31, -33, PATH]}
template t_barrier_3(name) {[(SIZE_X + 1)*3, 0, SIZE_X, SIZE_Y, -63, -49, PATH]}

template t_fence_0(name) {[(SIZE_X + 1)*0, 0, SIZE_X, SIZE_Y, -31, -34, PATH]}
template t_fence_1(name) {[(SIZE_X + 1)*1, 0, SIZE_X, SIZE_Y,  -1, -48, PATH]}
template t_fence_2(name) {[(SIZE_X + 1)*2, 0, SIZE_X, SIZE_Y, -31, -34, PATH]}
template t_fence_3(name) {[(SIZE_X + 1)*3, 0, SIZE_X, SIZE_Y, -61, -48, PATH]}
template t_fence_4(name) {[(SIZE_X + 1)*4, 0, SIZE_X, SIZE_Y, -31, -34, PATH]}
template t_fence_5(name) {[(SIZE_X + 1)*5, 0, SIZE_X, SIZE_Y,  -1, -48, PATH]}
template t_fence_6(name) {[(SIZE_X + 1)*6, 0, SIZE_X, SIZE_Y, -31, -34, PATH]}
template t_fence_7(name) {[(SIZE_X + 1)*7, 0, SIZE_X, SIZE_Y, -61, -48, PATH]}

template t_nochange(name, x) {[(SIZE_X + 1)*x, 0, SIZE_X, SIZE_Y, 0, 0, PATH]}

spriteset (s_bufferstop) {
    NE:   t_barrier_0("dec_barrier")
    SW:   t_barrier_1("dec_barrier")
    NW:   t_barrier_2("dec_barrier")
    SE:   t_barrier_3("dec_barrier")
}

spriteset (s_fence_test_station) {
    NE:   t_fence_0("dec_test_station_fence")
    SW:   t_fence_1("dec_test_station_fence")
    NW:   t_fence_2("dec_test_station_fence")
    SE:   t_fence_3("dec_test_station_fence")
    NE_s: t_fence_4("dec_test_station_fence") // special case
    SW_s: t_fence_5("dec_test_station_fence") // special case
    NW_s: t_fence_6("dec_test_station_fence") // special case
    SE_s: t_fence_7("dec_test_station_fence") // special case
}

spriteset (s_test_station) {
    X:       t_platform_0("st1_cargo_platform")
    Y:       t_platform_2("st1_cargo_platform")
    X_snow:  t_platform_0("snow_st1_cargo_platform")
    Y_snow:  t_platform_2("snow_st1_cargo_platform")
    X1:      t_platform_1("st1_cargo_platform")
    Y1:      t_platform_3("st1_cargo_platform")
    X1_snow: t_platform_1("snow_st1_cargo_platform")
    Y1_snow: t_platform_3("snow_st1_cargo_platform")
}
/*
spriteset(s_test_station_1) {
    X:      t_platform_1("st1_cargo_platform")
    Y:      t_platform_3("st1_cargo_platform")
    X_snow: t_platform_1("snow_st1_cargo_platform")
    Y_snow: t_platform_3("snow_st1_cargo_platform")
}
*/

spritelayout sl_test_station_x {
    ground {sprite: GROUNDSPRITE_RAIL_X;}
    childsprite {sprite: GROUNDSPRITE_RAIL_X + ((LOAD_TEMP(0)) != 0) * 26;}
    building { // fence
        sprite: CUSTOM(1,0 + LOAD_TEMP(3) * 4);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5);
    }
    building { // fence
        sprite: CUSTOM(1,1 + LOAD_TEMP(4) * 4);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6);
    }
    building { // fence
        sprite: CUSTOM(1,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building { // fence
        sprite: CUSTOM(1,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
    building { // bufferstop
        sprite: CUSTOM(0,0);
        xextent: 4;
        zextent: 8;
        hide_sprite: LOAD_TEMP(3);
    }
    building { // bufferstop
        sprite: CUSTOM(0,1);
        xoffset: 12;
        xextent: 4;
        zextent: 8;
        hide_sprite: LOAD_TEMP(4);
    }
    building { // platform
        sprite: s_test_station(0 + (LOAD_TEMP(0) == 2) * 2);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
    }
    building { //platform
        sprite: s_test_station(4 + (LOAD_TEMP(0) == 2) * 2);
        xoffset: 0;
        yoffset: 10;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
    }
}

spritelayout sl_test_station_y {
    ground {sprite: GROUNDSPRITE_RAIL_Y;}
    childsprite {sprite: GROUNDSPRITE_RAIL_Y + ((LOAD_TEMP(0)) != 0) * 26;}
    building {
        sprite: CUSTOM(0,2);
        yextent: 1;
        zextent: 4;
        hide_sprite: LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(0,3);
        yoffset: 16;
        yextent: 1;
        zextent: 4;
        hide_sprite: LOAD_TEMP(4);
    }
    building {
        sprite: s_test_station(1 + (LOAD_TEMP(0) == 2) * 2);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
    }
}


switch (FEAT_STATIONS, SELF, sw_test_station_0, [
    STORE_TEMP(terrain_type == TILETYPE_NORMAL ? 0 : terrain_type == TILETYPE_DESERT ? 1 : 2, 0), // returns 1|2 for snow|desert
    STORE_TEMP(build_date < date(1952, 1, 1) ? 1 : build_date < date(1986, 1, 1) ? 2 : 0, 1), // returns 1 if build date is before 1952, 2 if before 1986
    //STORE_TEMP((cargo_amount_waiting() >> 8) > 4 ? cargo_amount_waiting >> 8 : 4, 2),    // cargo amount waiting
    STORE_TEMP(hasbit(rail_continuation, 1) == 1, 3), // bufferstop
    STORE_TEMP(hasbit(rail_continuation, 0) == 1, 4), // bufferstop
    STORE_TEMP(nearby_tile_is_station(-1, 0) == 1, 5), // well this part I could've
    STORE_TEMP(nearby_tile_is_station( 1, 0) == 1, 6), // get rid of the == part...
    STORE_TEMP(nearby_tile_is_station( 0,-1) == 1, 7), //TODO fix this crap and add landscape support
    STORE_TEMP(nearby_tile_is_station( 0, 1) == 1, 8), //TODO make this crap a universal template
    STORE_TEMP(track_type == ELRL, 9),
]){return;}

switch (FEAT_STATIONS, SELF, sw_test_station_1, [
    STORE_TEMP(0,0),
    STORE_TEMP(build_date < date(1952, 1, 1) ? 1 : build_date < date(1986, 1, 1) ? 2 : 0, 1),
    STORE_TEMP(1,2),
    STORE_TEMP(0,3),
    STORE_TEMP(1,4),
    STORE_TEMP(0,5),
    STORE_TEMP(1,6),
    STORE_TEMP(1,7),
    STORE_TEMP(1,8),
]){return;}

item (FEAT_STATIONS, stn_test_station) {
    property {
        class:          "WSJT";
        classname:      string(CLS_WSJT);
        name:           string(STN_TEST_STATION);
    }
    graphics {
        sprite_layouts:             [sl_test_station_x, sl_test_station_y];
        custom_spritesets:          [s_bufferstop, s_fence_test_station];
        prepare_layout:             sw_test_station_0();
        purchase_prepare_layout:    sw_test_station_1();
        s_test_station;
    }
}