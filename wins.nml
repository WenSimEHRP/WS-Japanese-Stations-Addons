# 1 "wins.pnml"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "wins.pnml"
# 1 "src/header.pnml" 1
grf {
    grfid: "WS\24\05";
    name: string(STR_GRF_NAME);
    desc: string(STR_GRF_DESC);
    url: string(STR_GRF_URL);
    version: 1;
    min_compatible_version:1;
        param 0 {
            param_waypoints {
                type: bool;
                def_value: 0;
                name: string(PARAM_ENABLE_WAYPOINTS);
                desc: string(PARAM_ENABLE_WAYPOINTS_DESC);
            }
        }
        param 1 {
            param_stations {
                type: bool;
                def_value: 1;
                name: string(PARAM_ENABLE_STATIONS);
                desc: string(PARAM_ENABLE_STATIONS_DESC);
            }
        }
        param 2 {
            param_extended_stations {
                type: bool;
                def_value: 0;
                name: string(PARAM_ENABLE_EXTENDED_STATIONS);
                desc: string(PARAM_ENABLE_EXTENDED_STATIONS_DESC);
            }
        }
        param 3 {
            param_build_date {
                type: int;
                def_value: 1;
                min_value: 0;
                max_value: 4;
                name: string(PARAM_ENABLE_BUILD_DATE);
                desc: string(PARAM_ENABLE_BUILD_DATE_DESC);
                names: {
                    0: string(PARAM_ENABLE_BUILD_DATE_NEWLY_BUILT);
                    1: string(PARAM_ENABLE_BUILD_DATE_AUTO_UPDATE);
                    2: string(PARAM_ENABLE_BUILD_DATE_ALWAYS_LATEST);
                    3: string(PARAM_ENABLE_BUILD_DATE_ALWAYS_ERA_2);
                    4: string(PARAM_ENABLE_BUILD_DATE_ALWAYS_ERA_1);
                };
            }
        }
}
# 2 "wins.pnml" 2
# 1 "src/version_check.pnml" 1
if (ttd_platform != PLATFORM_OPENTTD || openttd_version < version_openttd(12,0)) {
    error(FATAL, string(STR_OPENTTD));
    exit;
}
# 3 "wins.pnml" 2
# 1 "src/templates.pnml" 1
# 11 "src/templates.pnml"
template t_platform_0(name) {[(64 + 8 + 2)*0, 0, 64 + 8, 64 + 8, -31-4, -33-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_1(name) {[(64 + 8 + 2)*1, 0, 64 + 8, 64 + 8, -51-4, -43-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_2(name) {[(64 + 8 + 2)*2, 0, 64 + 8, 64 + 8, -31-4, -33-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_3(name) {[(64 + 8 + 2)*3, 0, 64 + 8, 64 + 8, -11-4, -43-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_4(name) {[(64 + 8 + 2)*4, 0, 64 + 8, 64 + 8, -31-4, -33-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_5(name) {[(64 + 8 + 2)*5, 0, 64 + 8, 64 + 8, -51-4, -43-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_6(name) {[(64 + 8 + 2)*6, 0, 64 + 8, 64 + 8, -31-4, -33-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_platform_7(name) {[(64 + 8 + 2)*7, 0, 64 + 8, 64 + 8, -11-4, -43-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}
# 4 "wins.pnml" 2

# 1 "testing.nml" 1
railtypetable {
    RAIL,
    ELRL,
    MONO,
    MGLV,
    ELECTRIFIED:[
        ELRL,
    ],
    ORIGINAL_RAIL:[
        RAIL, ELRL, MONO, MGLV
    ]
}

cargotable {
    PASS, MAIL
}


spriteset(platform_recolour_0) {
    recolour_sprite {}
    recolour_sprite {
        0x41: 0x0C;
        0x42: 0x0D;
    }
    recolour_sprite {
        0x41: 0x08;
        0x42: 0x08;
    }
}
# 39 "testing.nml"
template t_barrier_0(name) {[(64 + 8 + 2)*0, 0, 64 + 8, 64 + 8, -31-4, -33-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_barrier_1(name) {[(64 + 8 + 2)*1, 0, 64 + 8, 64 + 8, -7-4, -45-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_barrier_2(name) {[(64 + 8 + 2)*2, 0, 64 + 8, 64 + 8, -31-4, -33-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_barrier_3(name) {[(64 + 8 + 2)*3, 0, 64 + 8, 64 + 8, -55-4, -45-4, "src/stations/generated_stations/gfx/" + name + ".png"]}

template t_fence_0(name) {[(64 + 8 + 2)*0, 0, 64 + 8, 64 + 8, -31-4, -34-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_1(name) {[(64 + 8 + 2)*1, 0, 64 + 8, 64 + 8, -1-4, -48-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_2(name) {[(64 + 8 + 2)*2, 0, 64 + 8, 64 + 8, -31-4, -34-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_3(name) {[(64 + 8 + 2)*3, 0, 64 + 8, 64 + 8, -61-4, -48-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_4(name) {[(64 + 8 + 2)*4, 0, 64 + 8, 64 + 8, -31-4, -34-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_5(name) {[(64 + 8 + 2)*5, 0, 64 + 8, 64 + 8, -1-4, -48-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_6(name) {[(64 + 8 + 2)*6, 0, 64 + 8, 64 + 8, -31-4, -34-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_7(name) {[(64 + 8 + 2)*7, 0, 64 + 8, 64 + 8, -61-4, -48-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_8(name) {[(64 + 8 + 2)*8, 0, 64 + 8, 64 + 8, -49-4, -43-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_9(name) {[(64 + 8 + 2)*9, 0, 64 + 8, 64 + 8, -19-4, -57-4, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_10(name) {[(64 + 8 + 2)*10, 0, 64 + 8, 64 + 8, -17, -47, "src/stations/generated_stations/gfx/" + name + ".png"]}
template t_fence_11(name) {[(64 + 8 + 2)*11, 0, 64 + 8, 64 + 8, -47, -57-4, "src/stations/generated_stations/gfx/" + name + ".png"]}

template t_nochange(name, x) {[(64 + 8 + 2)*x, 0, 64 + 8, 64 + 8, 0, 0, "src/stations/generated_stations/gfx/" + name + ".png"]}

spriteset (s_dummy, "src/stations/generated_stations/gfx/dec_dummy.png") {
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
    [0,0,1,1,0,0]
}

spriteset (s_bufferstop) {
    NE: t_barrier_0("dec_barrier")
    SW: t_barrier_1("dec_barrier")
    NW: t_barrier_2("dec_barrier")
    SE: t_barrier_3("dec_barrier")
}

spriteset (s_fence_test_station) {
    t_fence_0("dec_test_station_fence")
    t_fence_1("dec_test_station_fence")
    t_fence_2("dec_test_station_fence")
    t_fence_3("dec_test_station_fence")

    t_fence_4("dec_test_station_fence")
    t_fence_5("dec_test_station_fence")
    t_fence_6("dec_test_station_fence")
    t_fence_7("dec_test_station_fence")
    t_fence_8("dec_test_station_fence")
    t_fence_9("dec_test_station_fence")
    t_fence_10("dec_test_station_fence")
    t_fence_11("dec_test_station_fence")
}

spriteset (s_people_test_station) {
    t_nochange("dec_test_station_people",0)
    t_nochange("dec_test_station_people",1)
    t_nochange("dec_test_station_people",2)
    t_nochange("dec_test_station_people",3)
}

spriteset (s_test_station) {
    t_platform_0("dec_test_station_0")
    t_platform_1("dec_test_station_0")
    t_platform_2("dec_test_station_0")
    t_platform_3("dec_test_station_0")
    t_platform_0("dec_test_station_00")
    t_platform_1("dec_test_station_00")
    t_platform_2("dec_test_station_00")
    t_platform_3("dec_test_station_00")
    t_platform_0("dec_test_station_01")
    t_platform_1("dec_test_station_01")
    t_platform_2("dec_test_station_01")
    t_platform_3("dec_test_station_01")
    t_platform_0("dec_test_station_02")
    t_platform_1("dec_test_station_02")
    t_platform_2("dec_test_station_02")
    t_platform_3("dec_test_station_02")

    recolour_sprite {}
    recolour_sprite {
        0x41: 0x0C;
        0x42: 0x0D;
    }
    recolour_sprite {
        0x41: 0x08;
        0x42: 0x08;
    }
}

spriteset (s_snow_test_station) {
    t_nochange("snow_test_station",0)
    t_nochange("snow_test_station",1)
    t_nochange("snow_test_station",2)
    t_nochange("snow_test_station",3)
}

spriteset (s_decal_0_test_station) {
    t_nochange("dec_test_station_decal_0",0)
    t_nochange("dec_test_station_decal_0",1)
    t_nochange("dec_test_station_decal_0",2)
    t_nochange("dec_test_station_decal_0",3)
    t_nochange("dec_test_station_decal_0",4)
    t_nochange("dec_test_station_decal_0",5)
    t_nochange("dec_test_station_decal_0",6)
    t_nochange("dec_test_station_decal_0",7)
}

spriteset (s_shed_0_test_station) {
    t_nochange("dec_test_station_shed_0",0)
    t_nochange("dec_test_station_shed_0",1)
    t_nochange("dec_test_station_shed_0",2)
    t_nochange("dec_test_station_shed_0",3)
    t_nochange("dec_test_station_shed_0",4)
    t_nochange("dec_test_station_shed_0",5)
    t_nochange("dec_test_station_shed_0",6)
    t_nochange("dec_test_station_shed_0",7)
    recolour_sprite {}
    recolour_sprite {
        179: 113;
        123: 108;
        113: 112;
        112: 105;
        106: 112;
        105: 105;
        104: 104;
    }
    recolour_sprite {
        179: 35;
        123: 36;
        112: 35;
        113: 36;
        106: 36;
        105: 34;
        104: 5;
        14: 5;
        13: 4;
        12: 3;
        10: 2;
        3: 6;
    }
}

spriteset(s_shed_1_test_station) {
    t_nochange("dec_test_station_shed_1",0)
    t_nochange("dec_test_station_shed_1",1)
    t_nochange("dec_test_station_shed_1",2)
    t_nochange("dec_test_station_shed_1",3)
    t_nochange("dec_test_station_shed_1",4)
    t_nochange("dec_test_station_shed_1",5)
    t_nochange("dec_test_station_shed_1",6)
    t_nochange("dec_test_station_shed_1",7)
    recolour_sprite {}
    recolour_sprite {
        16..23: 32..39;
    }
    recolour_sprite {
        16..23: 104..111;
    }

}



spritelayout sl_test_station_x(platform_state, hide_decals) {
    ground {sprite: GROUNDSPRITE_RAIL_X;}
    childsprite {sprite: LOAD_TEMP(12) + 1 + ((LOAD_TEMP(0)) != 0) * 26; hide_sprite: (LOAD_TEMP(12) == 1);}
    building {
        sprite: CUSTOM(1,0);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5) || LOAD_TEMP(3);}
    building {
        sprite: CUSTOM(1,0+4);
        xextent: 1;
        yextent: 6;
        zextent: 8;
        hide_sprite: getbits(platform_state, 1, 1) || LOAD_TEMP(5) && LOAD_TEMP(3);}
    building {
        sprite: CUSTOM(1,0+4+1);
        xoffset: 15;
        xextent: 1;
        yextent: 6;
        zextent: 8;
        hide_sprite: getbits(platform_state, 1, 1) || LOAD_TEMP(6) && LOAD_TEMP(4);}
    building {
        sprite: CUSTOM(1,1);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6) || LOAD_TEMP(4);}
    building {
        sprite: CUSTOM(1,0+4+4);
        xextent: 1;
        yoffset: 9;
        yextent: 6;
        zextent: 8;
        hide_sprite: getbits(platform_state, 0, 1) || LOAD_TEMP(5) && LOAD_TEMP(3);}
    building {
        sprite: CUSTOM(1,0+4+4+1);
        xoffset: 15;
        xextent: 1;
        yoffset: 9;
        yextent: 6;
        zextent: 8;
        hide_sprite: getbits(platform_state, 0, 1) || LOAD_TEMP(6) && LOAD_TEMP(4);}
    building {
        sprite: CUSTOM(1,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);}
    building {
        sprite: CUSTOM(1,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);}
    building {
        sprite: CUSTOM(0,0);
        xextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(3);}
    building {
        sprite: CUSTOM(0,1);
        xoffset: 12;
        xextent: 3;
        yextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(4);}
    building {
        sprite: CUSTOM(2,0 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(2, LOAD_TEMP(1) + 16);
        hide_sprite: getbits(platform_state, 1, 1);}
    childsprite {
        sprite: CUSTOM(3,0);
        hide_sprite: !getbits(hide_decals, 1, 1) || LOAD_TEMP(0) != 2;}
    childsprite {
        sprite: DEFAULT(0);}
    childsprite {
        sprite: CUSTOM(4,0);
        hide_sprite: getbits(hide_decals, 0, 1);}
    childsprite {
        sprite: CUSTOM(4,0+4);
        hide_sprite: !hide_decals || (LOAD_TEMP(0) != 2);}
    childsprite {
        sprite: CUSTOM(4,0);
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(4,(LOAD_TEMP(1)) + 8);
        hide_sprite: getbits(hide_decals, 1, 1);}
    childsprite {
        sprite: CUSTOM(4,0+4);
        hide_sprite: getbits(hide_decals, 1, 1) || (LOAD_TEMP(0) != 2);}
    building {
        sprite: CUSTOM(2,1 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 10;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(2, LOAD_TEMP(1) + 16);
        hide_sprite: getbits(platform_state, 0, 1);}
    childsprite {
        sprite: CUSTOM(3,1);
        hide_sprite: !getbits(hide_decals, 1, 1) ||LOAD_TEMP(0) != 2;}
    childsprite {
        sprite: DEFAULT(1);}
    childsprite {
        sprite: CUSTOM(4,1);
        hide_sprite: getbits(hide_decals, 0, 1);}
    childsprite {
        sprite: CUSTOM(4,1+4);
        hide_sprite: !hide_decals || (LOAD_TEMP(0) != 2);}
    childsprite {
        sprite: CUSTOM(4,1);
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(4,(LOAD_TEMP(1)) + 8);
        hide_sprite: getbits(hide_decals, 1, 1);}
    childsprite {
        sprite: CUSTOM(4,1+4);
        hide_sprite: getbits(hide_decals, 1, 1) || (LOAD_TEMP(0) != 2);}

}

spritelayout sl_test_station_y(platform_state, hide_decals) {
    ground {sprite: GROUNDSPRITE_RAIL_Y;}
    childsprite {sprite: LOAD_TEMP(12) + ((LOAD_TEMP(0)) != 0) * 26; hide_sprite: (LOAD_TEMP(12) == 1);}
    building {
        sprite: CUSTOM(1,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5) || LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(1,2+4);
        xextent: 6;
        yextent: 1;
        zextent: 8;
        hide_sprite: getbits(platform_state, 1, 1) || LOAD_TEMP(5) && LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(1,2+4+1);
        yoffset: 15;
        xextent: 6;
        yextent: 1;
        zextent: 8;
        hide_sprite: getbits(platform_state, 1, 1) || LOAD_TEMP(6) && LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(1,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6) || LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(1,10);
        xoffset: 9;
        xextent: 6;
        yextent: 1;
        zextent: 8;
        hide_sprite: getbits(platform_state, 0, 1) || LOAD_TEMP(5) && LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(1,11);
        xoffset: 9;
        yoffset: 15;
        xextent: 6;
        yextent: 1;
        zextent: 8;
        hide_sprite: getbits(platform_state, 0, 1) || LOAD_TEMP(6) && LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(1,0);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building {
        sprite: CUSTOM(1,1);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
    building {
        sprite: CUSTOM(0,2);
        yextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(0,3);
        yoffset: 12;
        yextent: 3;
        xextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(2,2 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 6;
        yextent: 16;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: getbits(platform_state, 1, 1);
    }
    childsprite {
        sprite: CUSTOM(3,2);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(2);
    }
    childsprite {
        sprite: CUSTOM(4,2);
        hide_sprite: getbits(hide_decals, 0, 1);
    }
    childsprite {
        sprite: CUSTOM(4,2+4);
        hide_sprite: !hide_decals || (LOAD_TEMP(0) != 2);
    }
    childsprite {
        sprite: CUSTOM(4,2);
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(4,(LOAD_TEMP(1)) + 8);
        hide_sprite: getbits(hide_decals, 1, 1);
    }
    childsprite {
        sprite: CUSTOM(4,2+4);
        hide_sprite: getbits(hide_decals, 1, 1) || (LOAD_TEMP(0) != 2);
    }
    building {
        sprite: CUSTOM(2,3 + LOAD_TEMP(11) * 4);
        xoffset: 10;
        yoffset: 0;
        zoffset: 0;
        xextent: 6;
        yextent: 16;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: getbits(platform_state, 0, 1);
    }
    childsprite {
        sprite: CUSTOM(3,3);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(3);
    }
    childsprite {
        sprite: CUSTOM(4,3);
        hide_sprite: getbits(hide_decals, 0, 1);
    }
    childsprite {
        sprite: CUSTOM(4,3+4);
        hide_sprite: !hide_decals || (LOAD_TEMP(0) != 2);
    }
    childsprite {
        sprite: CUSTOM(4,3);
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(4,(LOAD_TEMP(1)) + 8);
        hide_sprite: getbits(hide_decals, 1, 1);
    }
    childsprite {
        sprite: CUSTOM(4,3+4);
        hide_sprite: getbits(hide_decals, 1, 1) || (LOAD_TEMP(0) != 2);
    }
}
# 513 "testing.nml"
switch (FEAT_STATIONS, SELF, sw_test_station_0, [
    STORE_TEMP((terrain_type == TILETYPE_SNOW ) << 1|
               (terrain_type == TILETYPE_DESERT) << 0, 0),
    STORE_TEMP(param_build_date >= 2 ?
               param_build_date - 2:
               param_build_date ?
                (current_date < date(1952, 1, 1)) +
                (current_date < date(1986, 1, 1)) :
                (build_date < date(1952, 1, 1)) +
                (build_date < date(1986, 1, 1)) , 1),
    STORE_TEMP(animation_frame, 2),
    STORE_TEMP(hasbit(rail_continuation, 1), 3),
    STORE_TEMP(hasbit(rail_continuation, 0), 4),
    STORE_TEMP(nearby_tile_is_station(-1, 0), 5),
    STORE_TEMP(nearby_tile_is_station( 1, 0), 6),
    STORE_TEMP(nearby_tile_is_station( 0,-1) &&
               (!hasbit(nearby_tile_slope(0,0), CORNER_S) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_W) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_N)), 7),
    STORE_TEMP(nearby_tile_is_station( 0, 1) &&
               (!hasbit(nearby_tile_slope(0,0), CORNER_N) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_E) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_S)), 8),


    STORE_TEMP(!(nearby_tile_is_station( 1, 0)) << 1|
               !(nearby_tile_is_station(-1, 0)) << 0, 11),
    STORE_TEMP(track_type == RAIL ? 1011 :
               track_type == ELRL ? 1011 :
               track_type == MONO ? 1093 :
               track_type == MGLV ? 1175 : 1, 12),
]){return;}

switch (FEAT_STATIONS, SELF, sw_test_station_1, [
    STORE_TEMP(0,0),
    STORE_TEMP(param_build_date >= 2 ?
               param_build_date - 2:
               param_build_date ?
                (current_date < date(1952, 1, 1)) +
                (current_date < date(1986, 1, 1)) :
                (build_date < date(1952, 1, 1)) +
                (build_date < date(1986, 1, 1)) , 1),
    STORE_TEMP(1,2),
    STORE_TEMP(0,3),
    STORE_TEMP(1,4),
    STORE_TEMP(0,5),
    STORE_TEMP(1,6),
    STORE_TEMP(1,7),
    STORE_TEMP(1,8),


    STORE_TEMP(3,11),
    STORE_TEMP(1,12),
]){return;}

spritegroup sg_people_test_station {
    little: s_people_test_station;
    lots: s_people_test_station;
}

item (FEAT_STATIONS, stn_test_station_0) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(0,0), sl_test_station_y(0,0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_0_test_station];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_0_shed_1) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(0,0), sl_test_station_y(0,0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_1_test_station];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_noshed) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(0,3), sl_test_station_y(0,3)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_1_shed_0) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(1, 0), sl_test_station_y(1, 0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_0_test_station, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_1_shed_1) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(1, 0), sl_test_station_y(1, 0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_1_test_station, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_1) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(1, 3), sl_test_station_y(1, 3)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_dummy, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_2_shed_0) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(2,0), sl_test_station_y(2,0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_0_test_station, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_2_shed_1) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(2,0), sl_test_station_y(2,0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_shed_1_test_station, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

item (FEAT_STATIONS, stn_test_station_2) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_test_station_x(2,3), sl_test_station_y(2,3)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_dummy, s_dummy];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
    }
}

template t_full (name, x) {[(64 + 8 + 2)*x, 0, 64 + 8, 64 + 8, -31-4, -33-4, NOCROP, "src/stations/generated_stations/gfx/" + name + ".png"]}




spriteset (s_full_station) {
    t_full("dec_full_station_0",0)
    t_nochange("dec_full_station_0",1)
    t_nochange("dec_full_station_0",2)
    t_nochange("dec_full_station_0",3)
    t_nochange("dec_full_station_0",4)
    t_nochange("dec_full_station_0",5)
    t_nochange("dec_full_station_0",6)
    t_nochange("dec_full_station_0",7)
    t_nochange("dec_full_station_0",8)
    t_nochange("dec_full_station_0",9)
    t_nochange("dec_full_station_0",10)
    t_nochange("dec_full_station_0",11)
    t_nochange("dec_full_station_0",12)
    recolour_sprite {
        198: ((7) + (746 * 1145141919 + 810) % ((10) - (7) + 1));
        199: ((7) + (747 * 1145141919 + 810) % ((10) - (7) + 1));
        200: ((7) + (748 * 1145141919 + 810) % ((10) - (7) + 1));
        201: ((7) + (749 * 1145141919 + 810) % ((10) - (7) + 1));
        202: ((7) + (750 * 1145141919 + 810) % ((10) - (7) + 1));
    }
    recolour_sprite {
        198: ((7) + (753 * 1145141919 + 810) % ((10) - (7) + 1));
        199: ((7) + (754 * 1145141919 + 810) % ((10) - (7) + 1));
        200: ((7) + (755 * 1145141919 + 810) % ((10) - (7) + 1));
        201: ((7) + (756 * 1145141919 + 810) % ((10) - (7) + 1));
        202: ((7) + (757 * 1145141919 + 810) % ((10) - (7) + 1));
    }
    recolour_sprite {
        198: ((7) + (760 * 1145141919 + 810) % ((10) - (7) + 1));
        199: ((7) + (761 * 1145141919 + 810) % ((10) - (7) + 1));
        200: ((7) + (762 * 1145141919 + 810) % ((10) - (7) + 1));
        201: ((7) + (763 * 1145141919 + 810) % ((10) - (7) + 1));
        202: ((7) + (764 * 1145141919 + 810) % ((10) - (7) + 1));
    }
    recolour_sprite {
        198: ((7) + (767 * 1145141919 + 810) % ((10) - (7) + 1));
        199: ((7) + (768 * 1145141919 + 810) % ((10) - (7) + 1));
        200: ((7) + (769 * 1145141919 + 810) % ((10) - (7) + 1));
        201: ((7) + (770 * 1145141919 + 810) % ((10) - (7) + 1));
        202: ((7) + (771 * 1145141919 + 810) % ((10) - (7) + 1));
    }
}

spritelayout sl_full_station_x {
    ground {sprite: GROUNDSPRITE_NORMAL;}
    building {
        sprite: CUSTOM(0,0);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5);
    }
    building {
        sprite: CUSTOM(0,1);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6);
    }
    building {
        sprite: CUSTOM(0,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building {
        sprite: CUSTOM(0,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
    building {
        sprite: CUSTOM(1,0);
        recolour_mode: RECOLOUR_REMAP;
        palette: CUSTOM(1, (LOAD_TEMP(10) % 4) + 13);
    }
    childsprite {
        sprite: CUSTOM(1,5);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(7);
    }
    childsprite {
        sprite: CUSTOM(1,6);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(8);
    }
    childsprite {
        sprite: CUSTOM(1,7);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(6);
    }
    childsprite {
        sprite: CUSTOM(1,8);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(5);
    }
    childsprite {
        sprite: CUSTOM(1,1);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(5) || LOAD_TEMP(7);
    }
    childsprite {
        sprite: CUSTOM(1,2);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(6) || LOAD_TEMP(8);
    }
    childsprite {
        sprite: CUSTOM(1,3);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(5) || LOAD_TEMP(8);
    }
    childsprite {
        sprite: CUSTOM(1,4);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: LOAD_TEMP(6) || LOAD_TEMP(7);
    }
    childsprite {
        sprite: CUSTOM(1,9);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (LOAD_TEMP(9) & 1 << 3) >> 3 || !(LOAD_TEMP(5) && LOAD_TEMP(7));
    }
    childsprite {
        sprite: CUSTOM(1,10);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (LOAD_TEMP(9) & 1 << 0) >> 0 || !(LOAD_TEMP(6) && LOAD_TEMP(8));
    }
    childsprite {
        sprite: CUSTOM(1,11);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (LOAD_TEMP(9) & 1 << 1) >> 1 || !(LOAD_TEMP(5) && LOAD_TEMP(8));
    }
    childsprite {
        sprite: CUSTOM(1,12);
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (LOAD_TEMP(9) & 1 << 2) >> 2 || !(LOAD_TEMP(6) && LOAD_TEMP(7));
    }

}

spritelayout sl_full_station_y {
    ground {sprite: GROUNDSPRITE_NORMAL;}
    building {
        sprite: CUSTOM(0,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5);
    }
    building {
        sprite: CUSTOM(0,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6);
    }
    building {
        sprite: CUSTOM(0,0);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building {
        sprite: CUSTOM(0,1);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
}

switch (FEAT_STATIONS, SELF, sw_full_station_0, [
    STORE_TEMP((terrain_type == TILETYPE_SNOW ) << 1|
               (terrain_type == TILETYPE_DESERT) << 0, 0),
    STORE_TEMP(param_build_date >= 2 ?
               param_build_date - 2:
               param_build_date ?
                (current_date < date(1952, 1, 1)) +
                (current_date < date(1986, 1, 1)) :
                (build_date < date(1952, 1, 1)) +
                (build_date < date(1986, 1, 1)) , 1),
    STORE_TEMP(animation_frame, 2),


    STORE_TEMP(nearby_tile_is_station(-1, 0), 5),
    STORE_TEMP(nearby_tile_is_station( 1, 0), 6),
    STORE_TEMP(nearby_tile_is_station( 0,-1) &&
               (!hasbit(nearby_tile_slope(0,0), CORNER_S) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_W) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_N)), 7),
    STORE_TEMP(nearby_tile_is_station( 0, 1) &&
               (!hasbit(nearby_tile_slope(0,0), CORNER_N) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_E) ||
                 hasbit(nearby_tile_slope(0,0), CORNER_S)), 8),
    STORE_TEMP(nearby_tile_is_station( 1, 1) << 0|
               nearby_tile_is_station(-1, 1) << 1|
               nearby_tile_is_station( 1,-1) << 2|
               nearby_tile_is_station(-1,-1) << 3, 9),
    STORE_TEMP(random_bits_tile, 10)
]){return;}

switch(FEAT_STATIONS, SELF, sw_full_station_1, [
    STORE_TEMP(0,0),
    STORE_TEMP(param_build_date >= 2 ?
               param_build_date - 2:
               param_build_date ?
                (current_date < date(1952, 1, 1)) +
                (current_date < date(1986, 1, 1)) :
                (build_date < date(1952, 1, 1)) +
                (build_date < date(1986, 1, 1)) , 1),
    STORE_TEMP(1,2),


    STORE_TEMP(0,5),
    STORE_TEMP(0,6),
    STORE_TEMP(0,7),
    STORE_TEMP(0,8),

    STORE_TEMP(0,10),


]){return;}

item (FEAT_STATIONS, stn_full_station_0) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: 0;
        hide_wire_tiles: STAT_ALL_TILES;
        non_traversable_tiles: STAT_ALL_TILES;
    }
    graphics {
        sprite_layouts: [sl_full_station_x, sl_full_station_y];
        custom_spritesets: [s_fence_test_station, s_full_station];
        prepare_layout: sw_full_station_0();
        purchase_prepare_layout: sw_full_station_1();


    }
}

spriteset (s_screendoor_anim_station) {
    t_nochange("dec_test_station_screen_door",0)
    t_nochange("dec_test_station_screen_door",1)
    t_nochange("dec_test_station_screen_door",2)
    t_nochange("dec_test_station_screen_door",3)
    t_nochange("dec_test_station_screen_door",4)
    t_nochange("dec_test_station_screen_door",5)
    t_nochange("dec_test_station_screen_door",6)
    t_nochange("dec_test_station_screen_door",7)
}


spritelayout sl_anim_station_x(platform_state) {
    ground {sprite: GROUNDSPRITE_RAIL_X;}
    childsprite {sprite: LOAD_TEMP(12) + 1 + ((LOAD_TEMP(0)) != 0) * 26; hide_sprite: (LOAD_TEMP(12) == 1);}
    building {
        sprite: CUSTOM(1,0 + LOAD_TEMP(3) * 4);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5);
    }
    building {
        sprite: CUSTOM(1,1 + LOAD_TEMP(4) * 4);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6);
    }
    building {
        sprite: CUSTOM(1,2);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building {
        sprite: CUSTOM(1,3);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
    building {
        sprite: CUSTOM(0,0);
        xextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(0,1);
        xoffset: 12;
        xextent: 3;
        yextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(2,0 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (platform_state & 1 << 1) >> 1;
    }
    childsprite {
        sprite: CUSTOM(3,0);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(0);
    }
    childsprite {
        sprite: CUSTOM(4,0 + 4);
        xoffset: LOAD_TEMP(2) <= 5? -(LOAD_TEMP(2)) * 2 : (LOAD_TEMP(2) - 10) * 2;
        yoffset: LOAD_TEMP(2) <= 5? LOAD_TEMP(2) : 10 - LOAD_TEMP(2);

    }
    childsprite {
        sprite: CUSTOM(4,0);
    }
    building {
        sprite: CUSTOM(2,1 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 10;
        zoffset: 0;
        xextent: 16;
        yextent: 6;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (platform_state & 1 << 0) >> 0;
    }
    childsprite {
        sprite: CUSTOM(3,1);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(1);
    }

}

spritelayout sl_anim_station_y(platform_state) {
    ground {sprite: GROUNDSPRITE_RAIL_Y;}
    childsprite {sprite: LOAD_TEMP(12) + ((LOAD_TEMP(0)) != 0) * 26; hide_sprite: (LOAD_TEMP(12) == 1);}
    building {
        sprite: CUSTOM(1,2 + LOAD_TEMP(3) * 4);
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(5);
    }
    building {
        sprite: CUSTOM(1,3 + LOAD_TEMP(4) * 4);
        yoffset: 15;
        xextent: 16;
        yextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(6);
    }
    building {
        sprite: CUSTOM(1,0);
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(7);
    }
    building {
        sprite: CUSTOM(1,1);
        xoffset: 15;
        xextent: 1;
        zextent: 8;
        hide_sprite: LOAD_TEMP(8);
    }
    building {
        sprite: CUSTOM(0,2);
        yextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(3);
    }
    building {
        sprite: CUSTOM(0,3);
        yoffset: 12;
        yextent: 3;
        xextent: 8;
        zextent: 8;
        hide_sprite: LOAD_TEMP(4);
    }
    building {
        sprite: CUSTOM(2,2 + LOAD_TEMP(11) * 4);
        xoffset: 0;
        yoffset: 0;
        zoffset: 0;
        xextent: 6;
        yextent: 16;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (platform_state & 1 << 1) >> 1;
    }
    childsprite {
        sprite: CUSTOM(3,2);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(2);
    }
    building {
        sprite: CUSTOM(2,3 + LOAD_TEMP(11) * 4);
        xoffset: 10;
        yoffset: 0;
        zoffset: 0;
        xextent: 6;
        yextent: 16;
        zextent: 6;
        recolour_mode: RECOLOUR_REMAP;
        palette: platform_recolour_0(LOAD_TEMP(1));
        hide_sprite: (platform_state & 1 << 0) >> 0;
    }
    childsprite {
        sprite: CUSTOM(3,3);
        hide_sprite: LOAD_TEMP(0) != 2;
    }
    childsprite {
        sprite: DEFAULT(3);
    }
}

switch (FEAT_STATIONS, SELF, sw_anim_station_screendoor_0, animation_frame) {
    5: return CB_RESULT_STOP_ANIMATION;
    10: return CB_RESULT_STOP_ANIMATION;
    0: return CB_RESULT_START_ANIMATION;
    default: return CB_RESULT_DO_NOTHING;
}

switch (FEAT_STATIONS, SELF, sw_anim_station_screendoor_1, getbits(extra_callback_info2, 0, 8)) {
    STAT_ANIM_TRAIN_LEAVES: return sw_anim_station_screendoor_0;
    STAT_ANIM_TRAIN_ENTERS: return sw_anim_station_screendoor_0;
    STAT_ANIM_250_TICKS: return CB_RESULT_STOP_ANIMATION;
}

item (FEAT_STATIONS, stn_anim_station_0) {
    property {
        class: "WSJT";
        classname: string(CLS_WSJT);
        name: string(STN_TEST_STATION);
        draw_pylon_tiles: STAT_ALL_TILES;
        animation_info: [ANIMATION_LOOPING, 10];
        animation_speed: 2;
        animation_triggers: bitmask(STAT_ANIM_TRAIN_ENTERS, STAT_ANIM_TRAIN_LEAVES, STAT_ANIM_250_TICKS);
    }
    graphics {
        sprite_layouts: [sl_anim_station_x(0), sl_anim_station_y(0)];
        custom_spritesets: [s_bufferstop, s_fence_test_station, s_test_station, s_snow_test_station, s_screendoor_anim_station];
        prepare_layout: sw_test_station_0();
        purchase_prepare_layout: sw_test_station_1();
        default: s_dummy;
        PASS: sg_people_test_station;
        anim_control: sw_anim_station_screendoor_1;
        anim_next_frame: CB_RESULT_NEXT_FRAME;
    }
}
# 6 "wins.pnml" 2
